# Code pipeline for serverless applications
AWSTemplateFormatVersion: '2010-09-09'

Description: >
  Template to create a multi-step code-pipeline for deploying applications to
  a staging environment, and after a manual approval process, deploy the application
  to a production environment

#
#--------------------------------------------------------------------------
# PARAMETERS
#--------------------------------------------------------------------------
#
# Required and optional parameters to create CodePipeline for 
# an elastic Beanstalk application.
#
Parameters:

#
#--------------------------------------------------------------------------
# General application settings
#--------------------------------------------------------------------------
#
  AppName:
    Description: Name of the application
    Type: String

#
#--------------------------------------------------------------------------
# GitHub settings
#--------------------------------------------------------------------------
#
  GitHubOwner:
    Type: String
    Description: GitHub repository owner
  GitHubRepo:
    Type: String
    Description: GitHub repository name
  GitHubBranch:
    Type: String
    Default: master
    Description: GitHub repository branch
  GitHubToken:
    Type: String
    NoEcho: true
    Description: GitHub repository OAuth token

#
#--------------------------------------------------------------------------
# Environment settings
#--------------------------------------------------------------------------
#
  NotificationEmail:
    Type: String
    Description: Notifications Email

#
#--------------------------------------------------------------------------
# Code build settings
#--------------------------------------------------------------------------
#
  CodeBuildComputeType:
    Description: The build compute type
    Type: String
    Default: BUILD_GENERAL1_SMALL
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE
  CodeBuildDockerImage:
    Description: The docker image to be used for code build
    Type: String
    Default: onema/php-build:php-7.1-node-8.9

  ElasticBeanstalkStagingApplication:
    Type: String
  ElasticBeanstalkStagingEnvironment:
    Type: String
  ElasticBeanstalkProductionApplication:
    Type: String
  ElasticBeanstalkProductionEnvironment:
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: "Application Settings"
      Parameters:
      - AppName
    - Label:
        default: "CodeBuild Settings"
      Parameters:
        - CodeBuildComputeType
        - CodeBuildDockerImage
    - Label:
        default: "Staging Settings"
      Parameters:
      - ElasticBeanstalkStagingApplication
      - ElasticBeanstalkStagingEnvironment
    - Label:
        default: "Production Settings"
      Parameters:
      - ElasticBeanstalkProductionApplication
      - ElasticBeanstalkProductionEnvironment
    - Label:
        default: "GitHub Settings"
      Parameters:
      - GitHubBranch
      - GitHubOwner
      - GitHubRepo
      - GitHubToken
    - Label:
        default: "Notification Settings"
      Parameters:
      - NotificationEmail


#
#--------------------------------------------------------------------------
# RESOURCES
#--------------------------------------------------------------------------
#
# Definition of all the resources required for the ElasticBeanstalk 
# deployment pipeline
#
Resources:

#
#--------------------------------------------------------------------------
# CodeBuild Role required to deploy the lambda functions.
#--------------------------------------------------------------------------
#
  CodeBuildDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-code-build-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
      #================================================================
      # NOTE: This role has admin access 
      #       lock down to fit your needs!
      #================================================================
        - arn:aws:iam::aws:policy/AdministratorAccess

#
#--------------------------------------------------------------------------
# CodeBuild definitions
#--------------------------------------------------------------------------
#
  #========================================================================
  # NOTE: At this time I don't know of an automated way to setup the GitHub
  #       WebHook, maybe a custom resource with lambda?. 
  #       A manual authentication step is required for the CodeBuildTest
  #========================================================================
  CodeBuildTest:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AppName}-tests"
      Description: !Sub "Run unit test for ${AppName}"
      Artifacts:
        Type: NO_ARTIFACTS
      ServiceRole: !Ref CodeBuildDeploymentRole
      Environment:
        ComputeType: !Ref CodeBuildComputeType
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value: !Ref "ArtifactsBucket"
          - Name: APP_NAME
            Value: !Ref AppName
        Image: !Ref CodeBuildDockerImage
        Type: LINUX_CONTAINER
      Source:
        Type: GITHUB
        Location: !Sub "https://github.com/${GitHubOwner}/${GitHubRepo}.git"
        BuildSpec: "buildspec-test.yml"

  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AppName}-build"
      Description: Build code for ElastcBeanstalk application
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !Ref CodeBuildDeploymentRole
      Environment:
        ComputeType: !Ref CodeBuildComputeType
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value: !Ref "ArtifactsBucket"
          - Name: APP_NAME
            Value: !Ref AppName
        Image: !Ref CodeBuildDockerImage
        Type: LINUX_CONTAINER
      Source:
        Type: CODEPIPELINE

#
#--------------------------------------------------------------------------
# CodePipeline role to build and deploy resources
#--------------------------------------------------------------------------
#
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-code-pipeline-role"
      AssumeRolePolicyDocument:
        Statement:
        - Action: ["sts:AssumeRole"]
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: "2012-10-17"
      Policies:
        - PolicyName: AccessToArtifactsBucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "s3:*"
                Resource:
                  - !Sub "arn:aws:s3:::${ArtifactsBucket}"
                  - !Sub "arn:aws:s3:::${ArtifactsBucket}/*"
        - PolicyName: SNSPublishNotifications
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "sns:*"
                Resource:
                  - !Ref CodePipelineSNSTopic

      ManagedPolicyArns:
      #================================================================
      # NOTE: This role has open access to serveral services
      #       lock down to fit your needs!
      #================================================================
        - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService
      Path: /

#
#--------------------------------------------------------------------------
# Code Pipeline artifacts bucket
#--------------------------------------------------------------------------
#
  ArtifactsBucket:
    Type: AWS::S3::Bucket

#
#--------------------------------------------------------------------------
# Notification topic
#--------------------------------------------------------------------------
#
  CodePipelineSNSTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: code-pipeline-notifications
      TopicName: !Sub "${AppName}-deployment-notifications"
      Subscription:
        - Endpoint: !Ref NotificationEmail
          Protocol: email


#
#--------------------------------------------------------------------------
# CodePipeline definition
#--------------------------------------------------------------------------
#
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref "ArtifactsBucket"
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Sub "${AppName}-cicd-code-pipeline"
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: Source
          Actions:
           - Name: Source
             InputArtifacts: []
             ActionTypeId:
               Category: Source
               Owner: ThirdParty
               Provider: GitHub
               Version: 1
             OutputArtifacts:
               - Name: AppSource
             Configuration:
               Owner: !Ref GitHubOwner
               Repo: !Ref GitHubRepo
               Branch: !Ref GitHubBranch
               OAuthToken: !Ref GitHubToken
             RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildApplication
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: AppSource
              OutputArtifacts:
                - Name: AppBuildArtifact
              Configuration:
                ProjectName: !Ref CodeBuild
              RunOrder: 1
        - Name: DeployToStaging
          Actions:
            - Name: DeployElasticBeanstalk
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ElasticBeanstalk
                Version: 1
              InputArtifacts:
                - Name: AppBuildArtifact
              OutputArtifacts: []
              Configuration:
                ApplicationName: !Ref "ElasticBeanstalkStagingApplication"
                EnvironmentName: !Ref "ElasticBeanstalkStagingEnvironment"
              RunOrder: 1
            - Name: ApproveStack
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: "1"
              Configuration:
                NotificationArn: !Ref CodePipelineSNSTopic
                CustomData:
                  !Sub |
                    PLEASE REVIEW THESE CHANGES IN STAGING.
                    Do you want to create a change set against the STAGING environment?
              RunOrder: 2
        - Name: DeployToProduction
          Actions:
          - Name: DeployElasticBeanstalk
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: ElasticBeanstalk
              Version: 1
            InputArtifacts:
            - Name: AppBuildArtifact
            OutputArtifacts: []
            Configuration:
              ApplicationName: !Ref "ElasticBeanstalkProductionApplication"
              EnvironmentName: !Ref "ElasticBeanstalkProductionEnvironment"
            RunOrder: 1
#
#--------------------------------------------------------------------------
# OUTPUTS
#--------------------------------------------------------------------------
#
# Outputs of the resources generated by the code pipeline
#
Outputs:
  CodePipeline:
    Description: CodePipeline resource
    Value: !Ref Pipeline
    Export:
      Name: !Sub "${AppName}-pipeline"

  CodePipelineNotifications:
    Description: Notifications topic for CodePipeline
    Value: !Ref CodePipelineSNSTopic
    Export:
      Name: !Sub "${AppName}-pipeline-notifications"
  
  CodeBuild:
    Description: CodeBuild resource
    Value: !Ref CodeBuild
    Export:
      Name: !Sub "${AppName}-codebuild"
  
